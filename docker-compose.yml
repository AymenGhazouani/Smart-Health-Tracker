services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-app
    ports:
      - "8081:8000"
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_KEY=base64:ng1JnUOKLvLrdbzYY1fFPfTe/abrjOpxzqIOsSxz/1g=
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=laravel
      - DB_USERNAME=laravel
      - DB_PASSWORD=secret
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MAIL_MAILER=log
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - laravel
    restart: unless-stopped

  db:
    image: mysql:8.0
    container_name: laravel-db
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
    ports:
      - "3307:3306"
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - laravel
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-psecret"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # phpMyAdmin - Database Management
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: laravel-phpmyadmin
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: laravel
      PMA_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
      UPLOAD_LIMIT: 100M
    ports:
      - "8082:80"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - laravel
    restart: unless-stopped

  # Redis - Caching & Session Storage
  redis:
    image: redis:7-alpine
    container_name: laravel-redis
    ports:
      - "6380:6379"
    volumes:
      - redisdata:/data
    networks:
      - laravel
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped



  # Redis Commander - Redis Management UI (Optional)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: laravel-redis-commander
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8083:8081"
    depends_on:
      - redis
    networks:
      - laravel
    restart: unless-stopped

  # Nginx - Reverse Proxy (Optional but recommended for production)
  # nginx:
  #   image: nginx:alpine
  #   container_name: laravel-nginx
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - .:/var/www/html
  #   depends_on:
  #     - app
  #   networks:
  #     - laravel
  #   restart: unless-stopped

volumes:
  dbdata:
  redisdata:

networks:
  laravel:
    driver: bridge